/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Alterian.JA.Client;
using Alterian.JA.Model;

namespace Alterian.JA.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProcessesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <remarks>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetProcessApplicationsDefaultResponse</returns>
        GetProcessApplicationsDefaultResponse GetProcessApplications(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0);

        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <remarks>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetProcessApplicationsDefaultResponse</returns>
        ApiResponse<GetProcessApplicationsDefaultResponse> GetProcessApplicationsWithHttpInfo(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0);
        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <remarks>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetProcessEntriesDefaultResponse</returns>
        GetProcessEntriesDefaultResponse GetProcessEntries(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0);

        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <remarks>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetProcessEntriesDefaultResponse</returns>
        ApiResponse<GetProcessEntriesDefaultResponse> GetProcessEntriesWithHttpInfo(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0);
        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <remarks>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AUTHChangePasswordDefaultResponse</returns>
        AUTHChangePasswordDefaultResponse UpdateProcessEntry(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0);

        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <remarks>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AUTHChangePasswordDefaultResponse</returns>
        ApiResponse<AUTHChangePasswordDefaultResponse> UpdateProcessEntryWithHttpInfo(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProcessesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <remarks>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetProcessApplicationsDefaultResponse</returns>
        System.Threading.Tasks.Task<GetProcessApplicationsDefaultResponse> GetProcessApplicationsAsync(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <remarks>
        /// List all the applications that operate together to form the complete system. This list cannot be modified
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetProcessApplicationsDefaultResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetProcessApplicationsDefaultResponse>> GetProcessApplicationsWithHttpInfoAsync(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <remarks>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetProcessEntriesDefaultResponse</returns>
        System.Threading.Tasks.Task<GetProcessEntriesDefaultResponse> GetProcessEntriesAsync(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <remarks>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetProcessEntriesDefaultResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetProcessEntriesDefaultResponse>> GetProcessEntriesWithHttpInfoAsync(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <remarks>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AUTHChangePasswordDefaultResponse</returns>
        System.Threading.Tasks.Task<AUTHChangePasswordDefaultResponse> UpdateProcessEntryAsync(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <remarks>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </remarks>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AUTHChangePasswordDefaultResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<AUTHChangePasswordDefaultResponse>> UpdateProcessEntryWithHttpInfoAsync(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IProcessesApi : IProcessesApiSync, IProcessesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ProcessesApi : IProcessesApi
    {
        private Alterian.JA.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ProcessesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProcessesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProcessesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ProcessesApi(string basePath)
        {
            this.Configuration = Alterian.JA.Client.Configuration.MergeConfigurations(
                Alterian.JA.Client.GlobalConfiguration.Instance,
                new Alterian.JA.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Alterian.JA.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Alterian.JA.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Alterian.JA.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProcessesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ProcessesApi(Alterian.JA.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Alterian.JA.Client.Configuration.MergeConfigurations(
                Alterian.JA.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Alterian.JA.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Alterian.JA.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Alterian.JA.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ProcessesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ProcessesApi(Alterian.JA.Client.ISynchronousClient client, Alterian.JA.Client.IAsynchronousClient asyncClient, Alterian.JA.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Alterian.JA.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Alterian.JA.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Alterian.JA.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Alterian.JA.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Alterian.JA.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetProcessApplicationsDefaultResponse</returns>
        public GetProcessApplicationsDefaultResponse GetProcessApplications(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0)
        {
            Alterian.JA.Client.ApiResponse<GetProcessApplicationsDefaultResponse> localVarResponse = GetProcessApplicationsWithHttpInfo(getClientSetsRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetProcessApplicationsDefaultResponse</returns>
        public Alterian.JA.Client.ApiResponse<GetProcessApplicationsDefaultResponse> GetProcessApplicationsWithHttpInfo(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0)
        {
            // verify the required parameter 'getClientSetsRequest' is set
            if (getClientSetsRequest == null)
            {
                throw new Alterian.JA.Client.ApiException(400, "Missing required parameter 'getClientSetsRequest' when calling ProcessesApi->GetProcessApplications");
            }

            Alterian.JA.Client.RequestOptions localVarRequestOptions = new Alterian.JA.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Alterian.JA.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Alterian.JA.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = getClientSetsRequest;

            localVarRequestOptions.Operation = "ProcessesApi.GetProcessApplications";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (TokenAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-Api-Key")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-Api-Key", this.Configuration.GetApiKeyWithPrefix("X-Api-Key"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GetProcessApplicationsDefaultResponse>("/GetProcessApplications", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProcessApplications", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetProcessApplicationsDefaultResponse</returns>
        public async System.Threading.Tasks.Task<GetProcessApplicationsDefaultResponse> GetProcessApplicationsAsync(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Alterian.JA.Client.ApiResponse<GetProcessApplicationsDefaultResponse> localVarResponse = await GetProcessApplicationsWithHttpInfoAsync(getClientSetsRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List all the applications that operate together to form the complete system. This list cannot be modified List all the applications that operate together to form the complete system. This list cannot be modified
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getClientSetsRequest">List all the applications that operate together to form the complete system. This list cannot be modified</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetProcessApplicationsDefaultResponse)</returns>
        public async System.Threading.Tasks.Task<Alterian.JA.Client.ApiResponse<GetProcessApplicationsDefaultResponse>> GetProcessApplicationsWithHttpInfoAsync(GetClientSetsRequest getClientSetsRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'getClientSetsRequest' is set
            if (getClientSetsRequest == null)
            {
                throw new Alterian.JA.Client.ApiException(400, "Missing required parameter 'getClientSetsRequest' when calling ProcessesApi->GetProcessApplications");
            }


            Alterian.JA.Client.RequestOptions localVarRequestOptions = new Alterian.JA.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Alterian.JA.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Alterian.JA.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = getClientSetsRequest;

            localVarRequestOptions.Operation = "ProcessesApi.GetProcessApplications";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (TokenAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-Api-Key")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-Api-Key", this.Configuration.GetApiKeyWithPrefix("X-Api-Key"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GetProcessApplicationsDefaultResponse>("/GetProcessApplications", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProcessApplications", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>GetProcessEntriesDefaultResponse</returns>
        public GetProcessEntriesDefaultResponse GetProcessEntries(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0)
        {
            Alterian.JA.Client.ApiResponse<GetProcessEntriesDefaultResponse> localVarResponse = GetProcessEntriesWithHttpInfo(getProcessEntriesRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of GetProcessEntriesDefaultResponse</returns>
        public Alterian.JA.Client.ApiResponse<GetProcessEntriesDefaultResponse> GetProcessEntriesWithHttpInfo(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0)
        {
            // verify the required parameter 'getProcessEntriesRequest' is set
            if (getProcessEntriesRequest == null)
            {
                throw new Alterian.JA.Client.ApiException(400, "Missing required parameter 'getProcessEntriesRequest' when calling ProcessesApi->GetProcessEntries");
            }

            Alterian.JA.Client.RequestOptions localVarRequestOptions = new Alterian.JA.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Alterian.JA.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Alterian.JA.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = getProcessEntriesRequest;

            localVarRequestOptions.Operation = "ProcessesApi.GetProcessEntries";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (TokenAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-Api-Key")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-Api-Key", this.Configuration.GetApiKeyWithPrefix("X-Api-Key"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<GetProcessEntriesDefaultResponse>("/GetProcessEntries", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProcessEntries", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GetProcessEntriesDefaultResponse</returns>
        public async System.Threading.Tasks.Task<GetProcessEntriesDefaultResponse> GetProcessEntriesAsync(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Alterian.JA.Client.ApiResponse<GetProcessEntriesDefaultResponse> localVarResponse = await GetProcessEntriesWithHttpInfoAsync(getProcessEntriesRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="getProcessEntriesRequest">Get the list of where each @see(ALProcessApplication) is currently located and it&#39;s last activity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GetProcessEntriesDefaultResponse)</returns>
        public async System.Threading.Tasks.Task<Alterian.JA.Client.ApiResponse<GetProcessEntriesDefaultResponse>> GetProcessEntriesWithHttpInfoAsync(GetProcessEntriesRequest getProcessEntriesRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'getProcessEntriesRequest' is set
            if (getProcessEntriesRequest == null)
            {
                throw new Alterian.JA.Client.ApiException(400, "Missing required parameter 'getProcessEntriesRequest' when calling ProcessesApi->GetProcessEntries");
            }


            Alterian.JA.Client.RequestOptions localVarRequestOptions = new Alterian.JA.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Alterian.JA.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Alterian.JA.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = getProcessEntriesRequest;

            localVarRequestOptions.Operation = "ProcessesApi.GetProcessEntries";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (TokenAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-Api-Key")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-Api-Key", this.Configuration.GetApiKeyWithPrefix("X-Api-Key"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<GetProcessEntriesDefaultResponse>("/GetProcessEntries", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetProcessEntries", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication) Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AUTHChangePasswordDefaultResponse</returns>
        public AUTHChangePasswordDefaultResponse UpdateProcessEntry(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0)
        {
            Alterian.JA.Client.ApiResponse<AUTHChangePasswordDefaultResponse> localVarResponse = UpdateProcessEntryWithHttpInfo(updateProcessEntryRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication) Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AUTHChangePasswordDefaultResponse</returns>
        public Alterian.JA.Client.ApiResponse<AUTHChangePasswordDefaultResponse> UpdateProcessEntryWithHttpInfo(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0)
        {
            // verify the required parameter 'updateProcessEntryRequest' is set
            if (updateProcessEntryRequest == null)
            {
                throw new Alterian.JA.Client.ApiException(400, "Missing required parameter 'updateProcessEntryRequest' when calling ProcessesApi->UpdateProcessEntry");
            }

            Alterian.JA.Client.RequestOptions localVarRequestOptions = new Alterian.JA.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Alterian.JA.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Alterian.JA.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = updateProcessEntryRequest;

            localVarRequestOptions.Operation = "ProcessesApi.UpdateProcessEntry";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (TokenAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-Api-Key")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-Api-Key", this.Configuration.GetApiKeyWithPrefix("X-Api-Key"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<AUTHChangePasswordDefaultResponse>("/UpdateProcessEntry", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateProcessEntry", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication) Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AUTHChangePasswordDefaultResponse</returns>
        public async System.Threading.Tasks.Task<AUTHChangePasswordDefaultResponse> UpdateProcessEntryAsync(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Alterian.JA.Client.ApiResponse<AUTHChangePasswordDefaultResponse> localVarResponse = await UpdateProcessEntryWithHttpInfoAsync(updateProcessEntryRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Modify the location or settings of a particular instance of a @see(ALProcessApplication) Modify the location or settings of a particular instance of a @see(ALProcessApplication)
        /// </summary>
        /// <exception cref="Alterian.JA.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="updateProcessEntryRequest">Modify the location or settings of a particular instance of a @see(ALProcessApplication)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AUTHChangePasswordDefaultResponse)</returns>
        public async System.Threading.Tasks.Task<Alterian.JA.Client.ApiResponse<AUTHChangePasswordDefaultResponse>> UpdateProcessEntryWithHttpInfoAsync(UpdateProcessEntryRequest updateProcessEntryRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'updateProcessEntryRequest' is set
            if (updateProcessEntryRequest == null)
            {
                throw new Alterian.JA.Client.ApiException(400, "Missing required parameter 'updateProcessEntryRequest' when calling ProcessesApi->UpdateProcessEntry");
            }


            Alterian.JA.Client.RequestOptions localVarRequestOptions = new Alterian.JA.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Alterian.JA.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Alterian.JA.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = updateProcessEntryRequest;

            localVarRequestOptions.Operation = "ProcessesApi.UpdateProcessEntry";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (TokenAuth) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-Api-Key")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-Api-Key", this.Configuration.GetApiKeyWithPrefix("X-Api-Key"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<AUTHChangePasswordDefaultResponse>("/UpdateProcessEntry", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("UpdateProcessEntry", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
