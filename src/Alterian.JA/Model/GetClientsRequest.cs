/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JA.Client.OpenAPIDateConverter;

namespace Alterian.JA.Model
{
    /// <summary>
    /// GetClientsRequest
    /// </summary>
    [DataContract(Name = "GetClients_request")]
    public partial class GetClientsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetClientsRequest" /> class.
        /// </summary>
        /// <param name="cursor">cursor.</param>
        /// <param name="includeDisabled">Should clients with enabled&#x3D;false be included in the list?.</param>
        /// <param name="includeEnabled">Should clients with enabled&#x3D;true be included in the list?.</param>
        public GetClientsRequest(APICursor cursor = default(APICursor), bool includeDisabled = default(bool), bool includeEnabled = default(bool))
        {
            this.Cursor = cursor;
            this.IncludeDisabled = includeDisabled;
            this.IncludeEnabled = includeEnabled;
        }

        /// <summary>
        /// Gets or Sets Cursor
        /// </summary>
        [DataMember(Name = "Cursor", EmitDefaultValue = false)]
        public APICursor Cursor { get; set; }

        /// <summary>
        /// Should clients with enabled&#x3D;false be included in the list?
        /// </summary>
        /// <value>Should clients with enabled&#x3D;false be included in the list?</value>
        [DataMember(Name = "IncludeDisabled", EmitDefaultValue = true)]
        public bool IncludeDisabled { get; set; }

        /// <summary>
        /// Should clients with enabled&#x3D;true be included in the list?
        /// </summary>
        /// <value>Should clients with enabled&#x3D;true be included in the list?</value>
        [DataMember(Name = "IncludeEnabled", EmitDefaultValue = true)]
        public bool IncludeEnabled { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetClientsRequest {\n");
            sb.Append("  Cursor: ").Append(Cursor).Append("\n");
            sb.Append("  IncludeDisabled: ").Append(IncludeDisabled).Append("\n");
            sb.Append("  IncludeEnabled: ").Append(IncludeEnabled).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
