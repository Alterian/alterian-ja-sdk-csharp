/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JA.Client.OpenAPIDateConverter;

namespace Alterian.JA.Model
{
    /// <summary>
    /// DMOmnitureSettings
    /// </summary>
    [DataContract(Name = "DMOmnitureSettings")]
    public partial class DMOmnitureSettings : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DMOmnitureSettings" /> class.
        /// </summary>
        /// <param name="enabled">enabled.</param>
        /// <param name="integrationNum">integrationNum.</param>
        /// <param name="companyName">companyName.</param>
        /// <param name="reportSuite">reportSuite.</param>
        /// <param name="remarketingSegPath">remarketingSegPath.</param>
        /// <param name="remarketingSeg">remarketingSeg.</param>
        /// <param name="emailAddr">emailAddr.</param>
        public DMOmnitureSettings(bool enabled = default(bool), string integrationNum = default(string), string companyName = default(string), string reportSuite = default(string), string remarketingSegPath = default(string), string remarketingSeg = default(string), string emailAddr = default(string))
        {
            this.Enabled = enabled;
            this.IntegrationNum = integrationNum;
            this.CompanyName = companyName;
            this.ReportSuite = reportSuite;
            this.RemarketingSegPath = remarketingSegPath;
            this.RemarketingSeg = remarketingSeg;
            this.EmailAddr = emailAddr;
        }

        /// <summary>
        /// Gets or Sets Enabled
        /// </summary>
        [DataMember(Name = "Enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// Gets or Sets IntegrationNum
        /// </summary>
        [DataMember(Name = "IntegrationNum", EmitDefaultValue = false)]
        public string IntegrationNum { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name = "CompanyName", EmitDefaultValue = false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets ReportSuite
        /// </summary>
        [DataMember(Name = "ReportSuite", EmitDefaultValue = false)]
        public string ReportSuite { get; set; }

        /// <summary>
        /// Gets or Sets RemarketingSegPath
        /// </summary>
        [DataMember(Name = "RemarketingSegPath", EmitDefaultValue = false)]
        public string RemarketingSegPath { get; set; }

        /// <summary>
        /// Gets or Sets RemarketingSeg
        /// </summary>
        [DataMember(Name = "RemarketingSeg", EmitDefaultValue = false)]
        public string RemarketingSeg { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddr
        /// </summary>
        [DataMember(Name = "EmailAddr", EmitDefaultValue = false)]
        public string EmailAddr { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DMOmnitureSettings {\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  IntegrationNum: ").Append(IntegrationNum).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  ReportSuite: ").Append(ReportSuite).Append("\n");
            sb.Append("  RemarketingSegPath: ").Append(RemarketingSegPath).Append("\n");
            sb.Append("  RemarketingSeg: ").Append(RemarketingSeg).Append("\n");
            sb.Append("  EmailAddr: ").Append(EmailAddr).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
