/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JA.Client.OpenAPIDateConverter;

namespace Alterian.JA.Model
{
    /// <summary>
    /// GetBrandTokenRequest
    /// </summary>
    [DataContract(Name = "GetBrandToken_request")]
    public partial class GetBrandTokenRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetBrandTokenRequest" /> class.
        /// </summary>
        /// <param name="brandId">Brand you would like a token to access, you must not be denied access..</param>
        /// <param name="userId">If you would like to impersonate a user, provide the id.  Note, you must be granted permissions to impersonate.  If you do not pass a value, you can call other methods which do not require a user id such as the Brand methods.</param>
        public GetBrandTokenRequest(int brandId = default(int), int? userId = default(int?))
        {
            this.BrandId = brandId;
            this.UserId = userId;
        }

        /// <summary>
        /// Brand you would like a token to access, you must not be denied access.
        /// </summary>
        /// <value>Brand you would like a token to access, you must not be denied access.</value>
        [DataMember(Name = "BrandId", EmitDefaultValue = false)]
        public int BrandId { get; set; }

        /// <summary>
        /// If you would like to impersonate a user, provide the id.  Note, you must be granted permissions to impersonate.  If you do not pass a value, you can call other methods which do not require a user id such as the Brand methods
        /// </summary>
        /// <value>If you would like to impersonate a user, provide the id.  Note, you must be granted permissions to impersonate.  If you do not pass a value, you can call other methods which do not require a user id such as the Brand methods</value>
        [DataMember(Name = "UserId", EmitDefaultValue = true)]
        public int? UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetBrandTokenRequest {\n");
            sb.Append("  BrandId: ").Append(BrandId).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
