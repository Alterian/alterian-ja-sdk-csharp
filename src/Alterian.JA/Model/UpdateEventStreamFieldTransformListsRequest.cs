/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JA.Client.OpenAPIDateConverter;

namespace Alterian.JA.Model
{
    /// <summary>
    /// UpdateEventStreamFieldTransformListsRequest
    /// </summary>
    [DataContract(Name = "UpdateEventStreamFieldTransformLists_request")]
    public partial class UpdateEventStreamFieldTransformListsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateEventStreamFieldTransformListsRequest" /> class.
        /// </summary>
        /// <param name="transformLists">Transform versions to be &#39;published&#39; for the specified fields. To unpublish everything for a column just specifiy an empty list.</param>
        public UpdateEventStreamFieldTransformListsRequest(List<FieldTransforms> transformLists = default(List<FieldTransforms>))
        {
            this.TransformLists = transformLists;
        }

        /// <summary>
        /// Transform versions to be &#39;published&#39; for the specified fields. To unpublish everything for a column just specifiy an empty list
        /// </summary>
        /// <value>Transform versions to be &#39;published&#39; for the specified fields. To unpublish everything for a column just specifiy an empty list</value>
        [DataMember(Name = "TransformLists", EmitDefaultValue = false)]
        public List<FieldTransforms> TransformLists { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateEventStreamFieldTransformListsRequest {\n");
            sb.Append("  TransformLists: ").Append(TransformLists).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
