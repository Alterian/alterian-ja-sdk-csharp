/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JA.Client.OpenAPIDateConverter;

namespace Alterian.JA.Model
{
    /// <summary>
    /// DMUser
    /// </summary>
    [DataContract(Name = "DMUser")]
    public partial class DMUser : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DMUser" /> class.
        /// </summary>
        /// <param name="iD">iD.</param>
        /// <param name="admin">admin.</param>
        /// <param name="showPeers">showPeers.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="title">title.</param>
        /// <param name="email">email.</param>
        /// <param name="phone">phone.</param>
        /// <param name="zip">zip.</param>
        /// <param name="timeOffset">timeOffset.</param>
        /// <param name="startupModuleID">startupModuleID.</param>
        /// <param name="memberOf">memberOf.</param>
        /// <param name="created">created.</param>
        /// <param name="modified">modified.</param>
        /// <param name="userCulture">userCulture.</param>
        /// <param name="timeZoneInfo">timeZoneInfo.</param>
        /// <param name="translationID">translationID.</param>
        public DMUser(int iD = default(int), bool admin = default(bool), bool showPeers = default(bool), string firstName = default(string), string lastName = default(string), string title = default(string), string email = default(string), string phone = default(string), string zip = default(string), int timeOffset = default(int), int startupModuleID = default(int), Object memberOf = default(Object), DateTime created = default(DateTime), DateTime modified = default(DateTime), string userCulture = default(string), DMTimeZoneInfo timeZoneInfo = default(DMTimeZoneInfo), int translationID = default(int))
        {
            this.ID = iD;
            this.Admin = admin;
            this.ShowPeers = showPeers;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Title = title;
            this.Email = email;
            this.Phone = phone;
            this.Zip = zip;
            this.TimeOffset = timeOffset;
            this.StartupModuleID = startupModuleID;
            this.MemberOf = memberOf;
            this.Created = created;
            this.Modified = modified;
            this.UserCulture = userCulture;
            this.TimeZoneInfo = timeZoneInfo;
            this.TranslationID = translationID;
        }

        /// <summary>
        /// Gets or Sets ID
        /// </summary>
        [DataMember(Name = "ID", EmitDefaultValue = false)]
        public int ID { get; set; }

        /// <summary>
        /// Gets or Sets Admin
        /// </summary>
        [DataMember(Name = "Admin", EmitDefaultValue = true)]
        public bool Admin { get; set; }

        /// <summary>
        /// Gets or Sets ShowPeers
        /// </summary>
        [DataMember(Name = "ShowPeers", EmitDefaultValue = true)]
        public bool ShowPeers { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "FirstName", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "LastName", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "Title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "Email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "Phone", EmitDefaultValue = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets Zip
        /// </summary>
        [DataMember(Name = "Zip", EmitDefaultValue = false)]
        public string Zip { get; set; }

        /// <summary>
        /// Gets or Sets TimeOffset
        /// </summary>
        [DataMember(Name = "TimeOffset", EmitDefaultValue = false)]
        public int TimeOffset { get; set; }

        /// <summary>
        /// Gets or Sets StartupModuleID
        /// </summary>
        [DataMember(Name = "StartupModuleID", EmitDefaultValue = false)]
        public int StartupModuleID { get; set; }

        /// <summary>
        /// Gets or Sets MemberOf
        /// </summary>
        [DataMember(Name = "MemberOf", EmitDefaultValue = false)]
        public Object MemberOf { get; set; }

        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name = "Created", EmitDefaultValue = false)]
        public DateTime Created { get; set; }

        /// <summary>
        /// Gets or Sets Modified
        /// </summary>
        [DataMember(Name = "Modified", EmitDefaultValue = false)]
        public DateTime Modified { get; set; }

        /// <summary>
        /// Gets or Sets UserCulture
        /// </summary>
        [DataMember(Name = "UserCulture", EmitDefaultValue = false)]
        public string UserCulture { get; set; }

        /// <summary>
        /// Gets or Sets TimeZoneInfo
        /// </summary>
        [DataMember(Name = "TimeZoneInfo", EmitDefaultValue = false)]
        public DMTimeZoneInfo TimeZoneInfo { get; set; }

        /// <summary>
        /// Gets or Sets TranslationID
        /// </summary>
        [DataMember(Name = "TranslationID", EmitDefaultValue = false)]
        public int TranslationID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DMUser {\n");
            sb.Append("  ID: ").Append(ID).Append("\n");
            sb.Append("  Admin: ").Append(Admin).Append("\n");
            sb.Append("  ShowPeers: ").Append(ShowPeers).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  Zip: ").Append(Zip).Append("\n");
            sb.Append("  TimeOffset: ").Append(TimeOffset).Append("\n");
            sb.Append("  StartupModuleID: ").Append(StartupModuleID).Append("\n");
            sb.Append("  MemberOf: ").Append(MemberOf).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  Modified: ").Append(Modified).Append("\n");
            sb.Append("  UserCulture: ").Append(UserCulture).Append("\n");
            sb.Append("  TimeZoneInfo: ").Append(TimeZoneInfo).Append("\n");
            sb.Append("  TranslationID: ").Append(TranslationID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
