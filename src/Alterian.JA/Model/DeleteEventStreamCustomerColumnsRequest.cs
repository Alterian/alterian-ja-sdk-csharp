/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JA.Client.OpenAPIDateConverter;

namespace Alterian.JA.Model
{
    /// <summary>
    /// DeleteEventStreamCustomerColumnsRequest
    /// </summary>
    [DataContract(Name = "DeleteEventStreamCustomerColumns_request")]
    public partial class DeleteEventStreamCustomerColumnsRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteEventStreamCustomerColumnsRequest" /> class.
        /// </summary>
        /// <param name="fieldNames">A list of @see(EventStreamCustomerField) names to remove from the event stream.</param>
        /// <param name="id">Id of the event stream from which you wish to delete the attribute data.</param>
        /// <param name="keyColumnName">In your list of columns, you must specify which column contains the key field for your customer (for instance, email address).  If you do not, the loader rule created will expect a cxid to be provided.</param>
        /// <param name="personaColumnName">If your data is going to have persona data, specify the column which holds the persona information.  Note that personas must be separated by a pipe character if there are multiples.</param>
        public DeleteEventStreamCustomerColumnsRequest(List<string> fieldNames = default(List<string>), int id = default(int), string keyColumnName = default(string), string personaColumnName = default(string))
        {
            this.FieldNames = fieldNames;
            this.Id = id;
            this.KeyColumnName = keyColumnName;
            this.PersonaColumnName = personaColumnName;
        }

        /// <summary>
        /// A list of @see(EventStreamCustomerField) names to remove from the event stream
        /// </summary>
        /// <value>A list of @see(EventStreamCustomerField) names to remove from the event stream</value>
        [DataMember(Name = "FieldNames", EmitDefaultValue = false)]
        public List<string> FieldNames { get; set; }

        /// <summary>
        /// Id of the event stream from which you wish to delete the attribute data
        /// </summary>
        /// <value>Id of the event stream from which you wish to delete the attribute data</value>
        [DataMember(Name = "Id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// In your list of columns, you must specify which column contains the key field for your customer (for instance, email address).  If you do not, the loader rule created will expect a cxid to be provided
        /// </summary>
        /// <value>In your list of columns, you must specify which column contains the key field for your customer (for instance, email address).  If you do not, the loader rule created will expect a cxid to be provided</value>
        [DataMember(Name = "KeyColumnName", EmitDefaultValue = false)]
        public string KeyColumnName { get; set; }

        /// <summary>
        /// If your data is going to have persona data, specify the column which holds the persona information.  Note that personas must be separated by a pipe character if there are multiples
        /// </summary>
        /// <value>If your data is going to have persona data, specify the column which holds the persona information.  Note that personas must be separated by a pipe character if there are multiples</value>
        [DataMember(Name = "PersonaColumnName", EmitDefaultValue = false)]
        public string PersonaColumnName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DeleteEventStreamCustomerColumnsRequest {\n");
            sb.Append("  FieldNames: ").Append(FieldNames).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  KeyColumnName: ").Append(KeyColumnName).Append("\n");
            sb.Append("  PersonaColumnName: ").Append(PersonaColumnName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
