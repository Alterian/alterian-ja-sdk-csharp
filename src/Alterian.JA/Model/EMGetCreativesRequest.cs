/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JA.Client.OpenAPIDateConverter;

namespace Alterian.JA.Model
{
    /// <summary>
    /// EMGetCreativesRequest
    /// </summary>
    [DataContract(Name = "EM_GetCreatives_request")]
    public partial class EMGetCreativesRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EMGetCreativesRequest" /> class.
        /// </summary>
        /// <param name="categoryId">EM &#39;folder&#39; to restrict results to selected category.</param>
        /// <param name="createdByUserId">Created by user id, used for filtering.</param>
        /// <param name="creativeName">All or partial value for creative name, used for filtering.</param>
        /// <param name="cursor">cursor.</param>
        /// <param name="eMMappingId">Mapping Id to use for EM connection.</param>
        /// <param name="modifiedUtcEndDate">Upper range for modified start date filter.</param>
        /// <param name="modifiedUtcStartDate">Lower range for modified start date filter.</param>
        public EMGetCreativesRequest(int? categoryId = default(int?), int? createdByUserId = default(int?), string creativeName = default(string), APICursor cursor = default(APICursor), int eMMappingId = default(int), DateTime? modifiedUtcEndDate = default(DateTime?), DateTime? modifiedUtcStartDate = default(DateTime?))
        {
            this.CategoryId = categoryId;
            this.CreatedByUserId = createdByUserId;
            this.CreativeName = creativeName;
            this.Cursor = cursor;
            this.EMMappingId = eMMappingId;
            this.ModifiedUtcEndDate = modifiedUtcEndDate;
            this.ModifiedUtcStartDate = modifiedUtcStartDate;
        }

        /// <summary>
        /// EM &#39;folder&#39; to restrict results to selected category
        /// </summary>
        /// <value>EM &#39;folder&#39; to restrict results to selected category</value>
        [DataMember(Name = "CategoryId", EmitDefaultValue = true)]
        public int? CategoryId { get; set; }

        /// <summary>
        /// Created by user id, used for filtering
        /// </summary>
        /// <value>Created by user id, used for filtering</value>
        [DataMember(Name = "CreatedByUserId", EmitDefaultValue = true)]
        public int? CreatedByUserId { get; set; }

        /// <summary>
        /// All or partial value for creative name, used for filtering
        /// </summary>
        /// <value>All or partial value for creative name, used for filtering</value>
        [DataMember(Name = "CreativeName", EmitDefaultValue = false)]
        public string CreativeName { get; set; }

        /// <summary>
        /// Gets or Sets Cursor
        /// </summary>
        [DataMember(Name = "Cursor", EmitDefaultValue = false)]
        public APICursor Cursor { get; set; }

        /// <summary>
        /// Mapping Id to use for EM connection
        /// </summary>
        /// <value>Mapping Id to use for EM connection</value>
        [DataMember(Name = "EMMappingId", EmitDefaultValue = false)]
        public int EMMappingId { get; set; }

        /// <summary>
        /// Upper range for modified start date filter
        /// </summary>
        /// <value>Upper range for modified start date filter</value>
        [DataMember(Name = "ModifiedUtcEndDate", EmitDefaultValue = true)]
        public DateTime? ModifiedUtcEndDate { get; set; }

        /// <summary>
        /// Lower range for modified start date filter
        /// </summary>
        /// <value>Lower range for modified start date filter</value>
        [DataMember(Name = "ModifiedUtcStartDate", EmitDefaultValue = true)]
        public DateTime? ModifiedUtcStartDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EMGetCreativesRequest {\n");
            sb.Append("  CategoryId: ").Append(CategoryId).Append("\n");
            sb.Append("  CreatedByUserId: ").Append(CreatedByUserId).Append("\n");
            sb.Append("  CreativeName: ").Append(CreativeName).Append("\n");
            sb.Append("  Cursor: ").Append(Cursor).Append("\n");
            sb.Append("  EMMappingId: ").Append(EMMappingId).Append("\n");
            sb.Append("  ModifiedUtcEndDate: ").Append(ModifiedUtcEndDate).Append("\n");
            sb.Append("  ModifiedUtcStartDate: ").Append(ModifiedUtcStartDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
