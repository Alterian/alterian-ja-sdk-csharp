/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JA.Client;
using Alterian.JA.Api;
// uncomment below to import models
//using Alterian.JA.Model;

namespace Alterian.JA.Test.Api
{
    /// <summary>
    ///  Class for testing AuthServerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AuthServerApiTests : IDisposable
    {
        private AuthServerApi instance;

        public AuthServerApiTests()
        {
            instance = new AuthServerApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuthServerApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AuthServerApi
            //Assert.IsType<AuthServerApi>(instance);
        }

        /// <summary>
        /// Test AUTHChangePassword
        /// </summary>
        [Fact]
        public void AUTHChangePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHChangePasswordRequest aUTHChangePasswordRequest = null;
            //var response = instance.AUTHChangePassword(aUTHChangePasswordRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHCreateLogin
        /// </summary>
        [Fact]
        public void AUTHCreateLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHCreateLoginRequest aUTHCreateLoginRequest = null;
            //var response = instance.AUTHCreateLogin(aUTHCreateLoginRequest);
            //Assert.IsType<AUTHCreateLoginDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHDisableLogin
        /// </summary>
        [Fact]
        public void AUTHDisableLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHDisableLoginRequest aUTHDisableLoginRequest = null;
            //var response = instance.AUTHDisableLogin(aUTHDisableLoginRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHEnableLogin
        /// </summary>
        [Fact]
        public void AUTHEnableLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHDisableLoginRequest aUTHDisableLoginRequest = null;
            //var response = instance.AUTHEnableLogin(aUTHDisableLoginRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHExpirePassword
        /// </summary>
        [Fact]
        public void AUTHExpirePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHDisableLoginRequest aUTHDisableLoginRequest = null;
            //var response = instance.AUTHExpirePassword(aUTHDisableLoginRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHGetClientLogins
        /// </summary>
        [Fact]
        public void AUTHGetClientLoginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHGetClientLoginsRequest aUTHGetClientLoginsRequest = null;
            //var response = instance.AUTHGetClientLogins(aUTHGetClientLoginsRequest);
            //Assert.IsType<AUTHGetClientLoginsDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHGetLoginPasswordRules
        /// </summary>
        [Fact]
        public void AUTHGetLoginPasswordRulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHGetLoginPasswordRulesRequest aUTHGetLoginPasswordRulesRequest = null;
            //var response = instance.AUTHGetLoginPasswordRules(aUTHGetLoginPasswordRulesRequest);
            //Assert.IsType<AUTHGetLoginPasswordRulesDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHGetLogins
        /// </summary>
        [Fact]
        public void AUTHGetLoginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHGetLoginsRequest aUTHGetLoginsRequest = null;
            //var response = instance.AUTHGetLogins(aUTHGetLoginsRequest);
            //Assert.IsType<AUTHGetClientLoginsDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHGetLoginsForUser
        /// </summary>
        [Fact]
        public void AUTHGetLoginsForUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHGetLoginsForUserRequest aUTHGetLoginsForUserRequest = null;
            //var response = instance.AUTHGetLoginsForUser(aUTHGetLoginsForUserRequest);
            //Assert.IsType<AUTHGetClientLoginsDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHRenameLogin
        /// </summary>
        [Fact]
        public void AUTHRenameLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHRenameLoginRequest aUTHRenameLoginRequest = null;
            //var response = instance.AUTHRenameLogin(aUTHRenameLoginRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHSetLoginUserId
        /// </summary>
        [Fact]
        public void AUTHSetLoginUserIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHSetLoginUserIdRequest aUTHSetLoginUserIdRequest = null;
            //var response = instance.AUTHSetLoginUserId(aUTHSetLoginUserIdRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test AUTHUpdateLogin
        /// </summary>
        [Fact]
        public void AUTHUpdateLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AUTHUpdateLoginRequest aUTHUpdateLoginRequest = null;
            //var response = instance.AUTHUpdateLogin(aUTHUpdateLoginRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }
    }
}
