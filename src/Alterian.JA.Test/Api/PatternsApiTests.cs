/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JA.Client;
using Alterian.JA.Api;
// uncomment below to import models
//using Alterian.JA.Model;

namespace Alterian.JA.Test.Api
{
    /// <summary>
    ///  Class for testing PatternsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PatternsApiTests : IDisposable
    {
        private PatternsApi instance;

        public PatternsApiTests()
        {
            instance = new PatternsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PatternsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PatternsApi
            //Assert.IsType<PatternsApi>(instance);
        }

        /// <summary>
        /// Test CreatePattern
        /// </summary>
        [Fact]
        public void CreatePatternTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePatternRequest createPatternRequest = null;
            //var response = instance.CreatePattern(createPatternRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreatePatternTasks
        /// </summary>
        [Fact]
        public void CreatePatternTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePatternTasksRequest createPatternTasksRequest = null;
            //var response = instance.CreatePatternTasks(createPatternTasksRequest);
            //Assert.IsType<CreatePatternTasksDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeletePattern
        /// </summary>
        [Fact]
        public void DeletePatternTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeletePatternRequest deletePatternRequest = null;
            //var response = instance.DeletePattern(deletePatternRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetPattern
        /// </summary>
        [Fact]
        public void GetPatternTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetPatternRequest getPatternRequest = null;
            //var response = instance.GetPattern(getPatternRequest);
            //Assert.IsType<GetPatternDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetPatternRecords
        /// </summary>
        [Fact]
        public void GetPatternRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetPatternRecordsRequest getPatternRecordsRequest = null;
            //var response = instance.GetPatternRecords(getPatternRecordsRequest);
            //Assert.IsType<GetEventRecordsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetPatternTasks
        /// </summary>
        [Fact]
        public void GetPatternTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetPatternTasksRequest getPatternTasksRequest = null;
            //var response = instance.GetPatternTasks(getPatternTasksRequest);
            //Assert.IsType<CreatePatternTasksDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetPatterns
        /// </summary>
        [Fact]
        public void GetPatternsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetPatternsRequest getPatternsRequest = null;
            //var response = instance.GetPatterns(getPatternsRequest);
            //Assert.IsType<GetPatternsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetRepeatingPatternItemScores
        /// </summary>
        [Fact]
        public void GetRepeatingPatternItemScoresTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetRepeatingPatternItemScoresRequest getRepeatingPatternItemScoresRequest = null;
            //var response = instance.GetRepeatingPatternItemScores(getRepeatingPatternItemScoresRequest);
            //Assert.IsType<GetRepeatingPatternItemScoresDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetRepeatingPatternItems
        /// </summary>
        [Fact]
        public void GetRepeatingPatternItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetRepeatingPatternItemsRequest getRepeatingPatternItemsRequest = null;
            //var response = instance.GetRepeatingPatternItems(getRepeatingPatternItemsRequest);
            //Assert.IsType<GetEventRecordsDefaultResponse>(response);
        }

        /// <summary>
        /// Test RequestCancelPatternTasks
        /// </summary>
        [Fact]
        public void RequestCancelPatternTasksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RequestCancelPatternTasksRequest requestCancelPatternTasksRequest = null;
            //var response = instance.RequestCancelPatternTasks(requestCancelPatternTasksRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdatePattern
        /// </summary>
        [Fact]
        public void UpdatePatternTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdatePatternRequest updatePatternRequest = null;
            //var response = instance.UpdatePattern(updatePatternRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateRepeatingPatternItemScores
        /// </summary>
        [Fact]
        public void UpdateRepeatingPatternItemScoresTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateRepeatingPatternItemScoresRequest updateRepeatingPatternItemScoresRequest = null;
            //var response = instance.UpdateRepeatingPatternItemScores(updateRepeatingPatternItemScoresRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }
    }
}
