/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JA.Client;
using Alterian.JA.Api;
// uncomment below to import models
//using Alterian.JA.Model;

namespace Alterian.JA.Test.Api
{
    /// <summary>
    ///  Class for testing DatasourcesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DatasourcesApiTests : IDisposable
    {
        private DatasourcesApi instance;

        public DatasourcesApiTests()
        {
            instance = new DatasourcesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DatasourcesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DatasourcesApi
            //Assert.IsType<DatasourcesApi>(instance);
        }

        /// <summary>
        /// Test AreDatasourceCampaignsPaused
        /// </summary>
        [Fact]
        public void AreDatasourceCampaignsPausedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AreDatasourceCampaignsPausedRequest areDatasourceCampaignsPausedRequest = null;
            //var response = instance.AreDatasourceCampaignsPaused(areDatasourceCampaignsPausedRequest);
            //Assert.IsType<AreDatasourceCampaignsPausedDefaultResponse>(response);
        }

        /// <summary>
        /// Test AreDatasourceJobsComplete
        /// </summary>
        [Fact]
        public void AreDatasourceJobsCompleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AreDatasourceJobsCompleteRequest areDatasourceJobsCompleteRequest = null;
            //var response = instance.AreDatasourceJobsComplete(areDatasourceJobsCompleteRequest);
            //Assert.IsType<AreDatasourceCampaignsPausedDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateDataSourceMapping
        /// </summary>
        [Fact]
        public void CreateDataSourceMappingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateDataSourceMappingRequest createDataSourceMappingRequest = null;
            //var response = instance.CreateDataSourceMapping(createDataSourceMappingRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateDatasource
        /// </summary>
        [Fact]
        public void CreateDatasourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateDatasourceRequest createDatasourceRequest = null;
            //var response = instance.CreateDatasource(createDatasourceRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteDataSourceMapping
        /// </summary>
        [Fact]
        public void DeleteDataSourceMappingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateDataSourceMappingRequest createDataSourceMappingRequest = null;
            //var response = instance.DeleteDataSourceMapping(createDataSourceMappingRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteDatasource
        /// </summary>
        [Fact]
        public void DeleteDatasourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteDatasourceRequest deleteDatasourceRequest = null;
            //var response = instance.DeleteDatasource(deleteDatasourceRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteFieldTransformList
        /// </summary>
        [Fact]
        public void DeleteFieldTransformListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteFieldTransformListRequest deleteFieldTransformListRequest = null;
            //var response = instance.DeleteFieldTransformList(deleteFieldTransformListRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteTransform
        /// </summary>
        [Fact]
        public void DeleteTransformTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteTransformRequest deleteTransformRequest = null;
            //var response = instance.DeleteTransform(deleteTransformRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DisableDatasource
        /// </summary>
        [Fact]
        public void DisableDatasourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DisableDatasourceRequest disableDatasourceRequest = null;
            //var response = instance.DisableDatasource(disableDatasourceRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test EnableDatasource
        /// </summary>
        [Fact]
        public void EnableDatasourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EnableDatasourceRequest enableDatasourceRequest = null;
            //var response = instance.EnableDatasource(enableDatasourceRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test ExportFieldTransformList
        /// </summary>
        [Fact]
        public void ExportFieldTransformListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //int? varVersion = null;
            //var response = instance.ExportFieldTransformList(id, varVersion);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetDataSourceAttributes
        /// </summary>
        [Fact]
        public void GetDataSourceAttributesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDataSourceAttributesRequest getDataSourceAttributesRequest = null;
            //var response = instance.GetDataSourceAttributes(getDataSourceAttributesRequest);
            //Assert.IsType<GetDataSourceAttributesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDataSourceEngineUserName
        /// </summary>
        [Fact]
        public void GetDataSourceEngineUserNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDataSourceEngineUserNameRequest getDataSourceEngineUserNameRequest = null;
            //var response = instance.GetDataSourceEngineUserName(getDataSourceEngineUserNameRequest);
            //Assert.IsType<GetDataSourceEngineUserNameDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDataSourceItems
        /// </summary>
        [Fact]
        public void GetDataSourceItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDataSourceItemsRequest getDataSourceItemsRequest = null;
            //var response = instance.GetDataSourceItems(getDataSourceItemsRequest);
            //Assert.IsType<GetDataSourceItemsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDataSourceMappings
        /// </summary>
        [Fact]
        public void GetDataSourceMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDataSourceMappingsRequest getDataSourceMappingsRequest = null;
            //var response = instance.GetDataSourceMappings(getDataSourceMappingsRequest);
            //Assert.IsType<GetDataSourceMappingsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDataSourceTypes
        /// </summary>
        [Fact]
        public void GetDataSourceTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetClientSetsRequest getClientSetsRequest = null;
            //var response = instance.GetDataSourceTypes(getClientSetsRequest);
            //Assert.IsType<GetDataSourceTypesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDataSourceUsers
        /// </summary>
        [Fact]
        public void GetDataSourceUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDataSourceUsersRequest getDataSourceUsersRequest = null;
            //var response = instance.GetDataSourceUsers(getDataSourceUsersRequest);
            //Assert.IsType<GetDataSourceUsersDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDataSources
        /// </summary>
        [Fact]
        public void GetDataSourcesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDataSourcesRequest getDataSourcesRequest = null;
            //var response = instance.GetDataSources(getDataSourcesRequest);
            //Assert.IsType<GetDataSourcesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDatasource
        /// </summary>
        [Fact]
        public void GetDatasourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDatasourceRequest getDatasourceRequest = null;
            //var response = instance.GetDatasource(getDatasourceRequest);
            //Assert.IsType<GetDatasourceDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDatasourceColumn
        /// </summary>
        [Fact]
        public void GetDatasourceColumnTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDatasourceColumnRequest getDatasourceColumnRequest = null;
            //var response = instance.GetDatasourceColumn(getDatasourceColumnRequest);
            //Assert.IsType<GetDatasourceColumnDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDatasourceColumns
        /// </summary>
        [Fact]
        public void GetDatasourceColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDatasourceColumnsRequest getDatasourceColumnsRequest = null;
            //var response = instance.GetDatasourceColumns(getDatasourceColumnsRequest);
            //Assert.IsType<GetDatasourceColumnsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDatasourceDatabases
        /// </summary>
        [Fact]
        public void GetDatasourceDatabasesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDatasourceDatabasesRequest getDatasourceDatabasesRequest = null;
            //var response = instance.GetDatasourceDatabases(getDatasourceDatabasesRequest);
            //Assert.IsType<GetDatasourceDatabasesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDatasourceFieldTypes
        /// </summary>
        [Fact]
        public void GetDatasourceFieldTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetClientSetsRequest getClientSetsRequest = null;
            //var response = instance.GetDatasourceFieldTypes(getClientSetsRequest);
            //Assert.IsType<GetDatasourceFieldTypesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDatasourceTables
        /// </summary>
        [Fact]
        public void GetDatasourceTablesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDatasourceTablesRequest getDatasourceTablesRequest = null;
            //var response = instance.GetDatasourceTables(getDatasourceTablesRequest);
            //Assert.IsType<GetDatasourceTablesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetDecodeList
        /// </summary>
        [Fact]
        public void GetDecodeListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDecodeListRequest getDecodeListRequest = null;
            //var response = instance.GetDecodeList(getDecodeListRequest);
            //Assert.IsType<GetDecodeListDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetFieldTransformList
        /// </summary>
        [Fact]
        public void GetFieldTransformListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetFieldTransformListRequest getFieldTransformListRequest = null;
            //var response = instance.GetFieldTransformList(getFieldTransformListRequest);
            //Assert.IsType<GetFieldTransformListDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetFieldTransformLists
        /// </summary>
        [Fact]
        public void GetFieldTransformListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetClientSetsRequest getClientSetsRequest = null;
            //var response = instance.GetFieldTransformLists(getClientSetsRequest);
            //Assert.IsType<GetFieldTransformListsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetProcessStatus
        /// </summary>
        [Fact]
        public void GetProcessStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetProcessStatusRequest getProcessStatusRequest = null;
            //var response = instance.GetProcessStatus(getProcessStatusRequest);
            //Assert.IsType<GetProcessStatusDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetTransforms
        /// </summary>
        [Fact]
        public void GetTransformsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetTransformsRequest getTransformsRequest = null;
            //var response = instance.GetTransforms(getTransformsRequest);
            //Assert.IsType<GetFieldTransformListsDefaultResponse>(response);
        }

        /// <summary>
        /// Test MarkDatasourceAsPendingDisable
        /// </summary>
        [Fact]
        public void MarkDatasourceAsPendingDisableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MarkDatasourceAsPendingDisableRequest markDatasourceAsPendingDisableRequest = null;
            //var response = instance.MarkDatasourceAsPendingDisable(markDatasourceAsPendingDisableRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test PauseDatasourceCampaigns
        /// </summary>
        [Fact]
        public void PauseDatasourceCampaignsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PauseDatasourceCampaignsRequest pauseDatasourceCampaignsRequest = null;
            //var response = instance.PauseDatasourceCampaigns(pauseDatasourceCampaignsRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test RefreshDatasource
        /// </summary>
        [Fact]
        public void RefreshDatasourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RefreshDatasourceRequest refreshDatasourceRequest = null;
            //var response = instance.RefreshDatasource(refreshDatasourceRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test ResumeDatasourceCampaigns
        /// </summary>
        [Fact]
        public void ResumeDatasourceCampaignsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ResumeDatasourceCampaignsRequest resumeDatasourceCampaignsRequest = null;
            //var response = instance.ResumeDatasourceCampaigns(resumeDatasourceCampaignsRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test SaveDecodeList
        /// </summary>
        [Fact]
        public void SaveDecodeListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SaveDecodeListRequest saveDecodeListRequest = null;
            //var response = instance.SaveDecodeList(saveDecodeListRequest);
            //Assert.IsType<GetDecodeListDefaultResponse>(response);
        }

        /// <summary>
        /// Test SaveFieldTransformList
        /// </summary>
        [Fact]
        public void SaveFieldTransformListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SaveFieldTransformListRequest saveFieldTransformListRequest = null;
            //var response = instance.SaveFieldTransformList(saveFieldTransformListRequest);
            //Assert.IsType<GetFieldTransformListDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateDataSourceMapping
        /// </summary>
        [Fact]
        public void UpdateDataSourceMappingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateDataSourceMappingRequest createDataSourceMappingRequest = null;
            //var response = instance.UpdateDataSourceMapping(createDataSourceMappingRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateDatasource
        /// </summary>
        [Fact]
        public void UpdateDatasourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateDatasourceRequest updateDatasourceRequest = null;
            //var response = instance.UpdateDatasource(updateDatasourceRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }
    }
}
