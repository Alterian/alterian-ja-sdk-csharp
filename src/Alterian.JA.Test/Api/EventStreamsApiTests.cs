/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JA.Client;
using Alterian.JA.Api;
// uncomment below to import models
//using Alterian.JA.Model;

namespace Alterian.JA.Test.Api
{
    /// <summary>
    ///  Class for testing EventStreamsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EventStreamsApiTests : IDisposable
    {
        private EventStreamsApi instance;

        public EventStreamsApiTests()
        {
            instance = new EventStreamsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EventStreamsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EventStreamsApi
            //Assert.IsType<EventStreamsApi>(instance);
        }

        /// <summary>
        /// Test CreateChannel
        /// </summary>
        [Fact]
        public void CreateChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateChannelRequest createChannelRequest = null;
            //var response = instance.CreateChannel(createChannelRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateEventStream
        /// </summary>
        [Fact]
        public void CreateEventStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateEventStreamRequest createEventStreamRequest = null;
            //var response = instance.CreateEventStream(createEventStreamRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateEventStreamGroup
        /// </summary>
        [Fact]
        public void CreateEventStreamGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateEventStreamGroupRequest createEventStreamGroupRequest = null;
            //var response = instance.CreateEventStreamGroup(createEventStreamGroupRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateIdealisedJourney
        /// </summary>
        [Fact]
        public void CreateIdealisedJourneyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateIdealisedJourneyRequest createIdealisedJourneyRequest = null;
            //var response = instance.CreateIdealisedJourney(createIdealisedJourneyRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateSankeyFavourite
        /// </summary>
        [Fact]
        public void CreateSankeyFavouriteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSankeyFavouriteRequest createSankeyFavouriteRequest = null;
            //var response = instance.CreateSankeyFavourite(createSankeyFavouriteRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateVisualisationFavourite
        /// </summary>
        [Fact]
        public void CreateVisualisationFavouriteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateVisualisationFavouriteRequest createVisualisationFavouriteRequest = null;
            //var response = instance.CreateVisualisationFavourite(createVisualisationFavouriteRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteChannel
        /// </summary>
        [Fact]
        public void DeleteChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteChannelRequest deleteChannelRequest = null;
            //var response = instance.DeleteChannel(deleteChannelRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteEventStream
        /// </summary>
        [Fact]
        public void DeleteEventStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteEventStreamRequest deleteEventStreamRequest = null;
            //var response = instance.DeleteEventStream(deleteEventStreamRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteEventStreamCustomerColumns
        /// </summary>
        [Fact]
        public void DeleteEventStreamCustomerColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteEventStreamCustomerColumnsRequest deleteEventStreamCustomerColumnsRequest = null;
            //var response = instance.DeleteEventStreamCustomerColumns(deleteEventStreamCustomerColumnsRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteEventStreamCustomerColumnsFromGroup
        /// </summary>
        [Fact]
        public void DeleteEventStreamCustomerColumnsFromGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteEventStreamCustomerColumnsFromGroupRequest deleteEventStreamCustomerColumnsFromGroupRequest = null;
            //var response = instance.DeleteEventStreamCustomerColumnsFromGroup(deleteEventStreamCustomerColumnsFromGroupRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteEventStreamGroup
        /// </summary>
        [Fact]
        public void DeleteEventStreamGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteEventStreamGroupRequest deleteEventStreamGroupRequest = null;
            //var response = instance.DeleteEventStreamGroup(deleteEventStreamGroupRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteIdealisedJourney
        /// </summary>
        [Fact]
        public void DeleteIdealisedJourneyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteIdealisedJourneyRequest deleteIdealisedJourneyRequest = null;
            //var response = instance.DeleteIdealisedJourney(deleteIdealisedJourneyRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteSankeyFavourites
        /// </summary>
        [Fact]
        public void DeleteSankeyFavouritesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteSankeyFavouritesRequest deleteSankeyFavouritesRequest = null;
            //var response = instance.DeleteSankeyFavourites(deleteSankeyFavouritesRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteVisualisationFavourites
        /// </summary>
        [Fact]
        public void DeleteVisualisationFavouritesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteVisualisationFavouritesRequest deleteVisualisationFavouritesRequest = null;
            //var response = instance.DeleteVisualisationFavourites(deleteVisualisationFavouritesRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test ExportEventStreamInteraction
        /// </summary>
        [Fact]
        public void ExportEventStreamInteractionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExportEventStreamInteractionRequest exportEventStreamInteractionRequest = null;
            //var response = instance.ExportEventStreamInteraction(exportEventStreamInteractionRequest);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test GetChannels
        /// </summary>
        [Fact]
        public void GetChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetChannels();
            //Assert.IsType<GetChannelsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventRecords
        /// </summary>
        [Fact]
        public void GetEventRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventRecordsRequest getEventRecordsRequest = null;
            //var response = instance.GetEventRecords(getEventRecordsRequest);
            //Assert.IsType<GetEventRecordsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStream
        /// </summary>
        [Fact]
        public void GetEventStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventStreamRequest getEventStreamRequest = null;
            //var response = instance.GetEventStream(getEventStreamRequest);
            //Assert.IsType<GetEventStreamDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStreamAggregates
        /// </summary>
        [Fact]
        public void GetEventStreamAggregatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventStreamAggregatesRequest getEventStreamAggregatesRequest = null;
            //var response = instance.GetEventStreamAggregates(getEventStreamAggregatesRequest);
            //Assert.IsType<GetEventRecordsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStreamChannels
        /// </summary>
        [Fact]
        public void GetEventStreamChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventStreamChannelsRequest getEventStreamChannelsRequest = null;
            //var response = instance.GetEventStreamChannels(getEventStreamChannelsRequest);
            //Assert.IsType<GetDataSourceUsersDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStreamDecodeMappings
        /// </summary>
        [Fact]
        public void GetEventStreamDecodeMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventStreamDecodeMappingsRequest getEventStreamDecodeMappingsRequest = null;
            //var response = instance.GetEventStreamDecodeMappings(getEventStreamDecodeMappingsRequest);
            //Assert.IsType<GetEventStreamDecodeMappingsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStreamDecodeTargetDiscretes
        /// </summary>
        [Fact]
        public void GetEventStreamDecodeTargetDiscretesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventStreamDecodeTargetDiscretesRequest getEventStreamDecodeTargetDiscretesRequest = null;
            //var response = instance.GetEventStreamDecodeTargetDiscretes(getEventStreamDecodeTargetDiscretesRequest);
            //Assert.IsType<GetEventStreamDecodeTargetDiscretesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStreamDiscreteValues
        /// </summary>
        [Fact]
        public void GetEventStreamDiscreteValuesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventStreamDiscreteValuesRequest getEventStreamDiscreteValuesRequest = null;
            //var response = instance.GetEventStreamDiscreteValues(getEventStreamDiscreteValuesRequest);
            //Assert.IsType<GetEventStreamDiscreteValuesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStreamModels
        /// </summary>
        [Fact]
        public void GetEventStreamModelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetEventStreamModelsRequest getEventStreamModelsRequest = null;
            //var response = instance.GetEventStreamModels(getEventStreamModelsRequest);
            //Assert.IsType<GetEventStreamModelsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetEventStreams
        /// </summary>
        [Fact]
        public void GetEventStreamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetClientSetsRequest getClientSetsRequest = null;
            //var response = instance.GetEventStreams(getClientSetsRequest);
            //Assert.IsType<GetEventStreamsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetFieldTransformationDiscreteValues
        /// </summary>
        [Fact]
        public void GetFieldTransformationDiscreteValuesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetFieldTransformationDiscreteValuesRequest getFieldTransformationDiscreteValuesRequest = null;
            //var response = instance.GetFieldTransformationDiscreteValues(getFieldTransformationDiscreteValuesRequest);
            //Assert.IsType<GetEventStreamDecodeTargetDiscretesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetFieldTransformationMappings
        /// </summary>
        [Fact]
        public void GetFieldTransformationMappingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetFieldTransformationMappingsRequest getFieldTransformationMappingsRequest = null;
            //var response = instance.GetFieldTransformationMappings(getFieldTransformationMappingsRequest);
            //Assert.IsType<GetFieldTransformationMappingsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetIdealisedJourneys
        /// </summary>
        [Fact]
        public void GetIdealisedJourneysTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetIdealisedJourneys();
            //Assert.IsType<GetIdealisedJourneysDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetSankeyFavourites
        /// </summary>
        [Fact]
        public void GetSankeyFavouritesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSankeyFavouritesRequest getSankeyFavouritesRequest = null;
            //var response = instance.GetSankeyFavourites(getSankeyFavouritesRequest);
            //Assert.IsType<GetSankeyFavouritesDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetVisualisationFavourites
        /// </summary>
        [Fact]
        public void GetVisualisationFavouritesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetVisualisationFavourites();
            //Assert.IsType<GetVisualisationFavouritesDefaultResponse>(response);
        }

        /// <summary>
        /// Test QueryEventStream
        /// </summary>
        [Fact]
        public void QueryEventStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QueryEventStreamRequest queryEventStreamRequest = null;
            //var response = instance.QueryEventStream(queryEventStreamRequest);
            //Assert.IsType<QueryEventStreamDefaultResponse>(response);
        }

        /// <summary>
        /// Test QueryEventStreamCount
        /// </summary>
        [Fact]
        public void QueryEventStreamCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QueryEventStreamCountRequest queryEventStreamCountRequest = null;
            //var response = instance.QueryEventStreamCount(queryEventStreamCountRequest);
            //Assert.IsType<QueryEventStreamCountDefaultResponse>(response);
        }

        /// <summary>
        /// Test QueryEventStreamInteraction
        /// </summary>
        [Fact]
        public void QueryEventStreamInteractionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExportEventStreamInteractionRequest exportEventStreamInteractionRequest = null;
            //var response = instance.QueryEventStreamInteraction(exportEventStreamInteractionRequest);
            //Assert.IsType<GetEventRecordsDefaultResponse>(response);
        }

        /// <summary>
        /// Test QueryEventStreamTransition
        /// </summary>
        [Fact]
        public void QueryEventStreamTransitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QueryEventStreamTransitionRequest queryEventStreamTransitionRequest = null;
            //var response = instance.QueryEventStreamTransition(queryEventStreamTransitionRequest);
            //Assert.IsType<GetEventRecordsDefaultResponse>(response);
        }

        /// <summary>
        /// Test RunSequencePredictor
        /// </summary>
        [Fact]
        public void RunSequencePredictorTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RunSequencePredictorRequest runSequencePredictorRequest = null;
            //var response = instance.RunSequencePredictor(runSequencePredictorRequest);
            //Assert.IsType<RunSequencePredictorDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateChannel
        /// </summary>
        [Fact]
        public void UpdateChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateChannelRequest updateChannelRequest = null;
            //var response = instance.UpdateChannel(updateChannelRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateEventStreamFieldTransformLists
        /// </summary>
        [Fact]
        public void UpdateEventStreamFieldTransformListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateEventStreamFieldTransformListsRequest updateEventStreamFieldTransformListsRequest = null;
            //var response = instance.UpdateEventStreamFieldTransformLists(updateEventStreamFieldTransformListsRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateIdealisedJourney
        /// </summary>
        [Fact]
        public void UpdateIdealisedJourneyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateIdealisedJourneyRequest updateIdealisedJourneyRequest = null;
            //var response = instance.UpdateIdealisedJourney(updateIdealisedJourneyRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateSankeyFavourite
        /// </summary>
        [Fact]
        public void UpdateSankeyFavouriteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateSankeyFavouriteRequest updateSankeyFavouriteRequest = null;
            //var response = instance.UpdateSankeyFavourite(updateSankeyFavouriteRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateVisualisationFavourite
        /// </summary>
        [Fact]
        public void UpdateVisualisationFavouriteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateVisualisationFavouriteRequest updateVisualisationFavouriteRequest = null;
            //var response = instance.UpdateVisualisationFavourite(updateVisualisationFavouriteRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpsertEventStreamCustomerColumns
        /// </summary>
        [Fact]
        public void UpsertEventStreamCustomerColumnsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpsertEventStreamCustomerColumnsRequest upsertEventStreamCustomerColumnsRequest = null;
            //var response = instance.UpsertEventStreamCustomerColumns(upsertEventStreamCustomerColumnsRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpsertEventStreamCustomerColumnsToGroup
        /// </summary>
        [Fact]
        public void UpsertEventStreamCustomerColumnsToGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpsertEventStreamCustomerColumnsToGroupRequest upsertEventStreamCustomerColumnsToGroupRequest = null;
            //var response = instance.UpsertEventStreamCustomerColumnsToGroup(upsertEventStreamCustomerColumnsToGroupRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }
    }
}
