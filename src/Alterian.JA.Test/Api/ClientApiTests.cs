/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JA.Client;
using Alterian.JA.Api;
// uncomment below to import models
//using Alterian.JA.Model;

namespace Alterian.JA.Test.Api
{
    /// <summary>
    ///  Class for testing ClientApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ClientApiTests : IDisposable
    {
        private ClientApi instance;

        public ClientApiTests()
        {
            instance = new ClientApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ClientApi
            //Assert.IsType<ClientApi>(instance);
        }

        /// <summary>
        /// Test CreateClient
        /// </summary>
        [Fact]
        public void CreateClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateClientRequest createClientRequest = null;
            //var response = instance.CreateClient(createClientRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test CreateClientEx
        /// </summary>
        [Fact]
        public void CreateClientExTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateClientRequest createClientRequest = null;
            //var response = instance.CreateClientEx(createClientRequest);
            //Assert.IsType<CreateClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test DeleteClient
        /// </summary>
        [Fact]
        public void DeleteClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteClientRequest deleteClientRequest = null;
            //var response = instance.DeleteClient(deleteClientRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test DisableClient
        /// </summary>
        [Fact]
        public void DisableClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DisableClientRequest disableClientRequest = null;
            //var response = instance.DisableClient(disableClientRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test EnableClient
        /// </summary>
        [Fact]
        public void EnableClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DisableClientRequest disableClientRequest = null;
            //var response = instance.EnableClient(disableClientRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetClientSettings
        /// </summary>
        [Fact]
        public void GetClientSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetClientSettingsRequest getClientSettingsRequest = null;
            //var response = instance.GetClientSettings(getClientSettingsRequest);
            //Assert.IsType<GetClientSettingsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetClients
        /// </summary>
        [Fact]
        public void GetClientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetClientsRequest getClientsRequest = null;
            //var response = instance.GetClients(getClientsRequest);
            //Assert.IsType<GetBrandsDefaultResponse>(response);
        }

        /// <summary>
        /// Test GetCurrentClient
        /// </summary>
        [Fact]
        public void GetCurrentClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCurrentClient();
            //Assert.IsType<GetCurrentClientDefaultResponse>(response);
        }

        /// <summary>
        /// Test UpdateClientSettings
        /// </summary>
        [Fact]
        public void UpdateClientSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateClientSettingsRequest updateClientSettingsRequest = null;
            //var response = instance.UpdateClientSettings(updateClientSettingsRequest);
            //Assert.IsType<AUTHChangePasswordDefaultResponse>(response);
        }
    }
}
