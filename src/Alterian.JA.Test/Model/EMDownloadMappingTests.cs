/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JA.Model;
using Alterian.JA.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JA.Test.Model
{
    /// <summary>
    ///  Class for testing EMDownloadMapping
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EMDownloadMappingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EMDownloadMapping
        //private EMDownloadMapping instance;

        public EMDownloadMappingTests()
        {
            // TODO uncomment below to create an instance of EMDownloadMapping
            //instance = new EMDownloadMapping();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EMDownloadMapping
        /// </summary>
        [Fact]
        public void EMDownloadMappingInstanceTest()
        {
            // TODO uncomment below to test "IsType" EMDownloadMapping
            //Assert.IsType<EMDownloadMapping>(instance);
        }

        /// <summary>
        /// Test the property 'ID'
        /// </summary>
        [Fact]
        public void IDTest()
        {
            // TODO unit test for the property 'ID'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'KeyColumnId'
        /// </summary>
        [Fact]
        public void KeyColumnIdTest()
        {
            // TODO unit test for the property 'KeyColumnId'
        }

        /// <summary>
        /// Test the property 'KeyColumnNameEx'
        /// </summary>
        [Fact]
        public void KeyColumnNameExTest()
        {
            // TODO unit test for the property 'KeyColumnNameEx'
        }

        /// <summary>
        /// Test the property 'ResponseTable'
        /// </summary>
        [Fact]
        public void ResponseTableTest()
        {
            // TODO unit test for the property 'ResponseTable'
        }

        /// <summary>
        /// Test the property 'ContactTable'
        /// </summary>
        [Fact]
        public void ContactTableTest()
        {
            // TODO unit test for the property 'ContactTable'
        }

        /// <summary>
        /// Test the property 'EMPrimarykeyId'
        /// </summary>
        [Fact]
        public void EMPrimarykeyIdTest()
        {
            // TODO unit test for the property 'EMPrimarykeyId'
        }

        /// <summary>
        /// Test the property 'EMUNCOutputLocation'
        /// </summary>
        [Fact]
        public void EMUNCOutputLocationTest()
        {
            // TODO unit test for the property 'EMUNCOutputLocation'
        }

        /// <summary>
        /// Test the property 'EMPrimaryKeyType'
        /// </summary>
        [Fact]
        public void EMPrimaryKeyTypeTest()
        {
            // TODO unit test for the property 'EMPrimaryKeyType'
        }

        /// <summary>
        /// Test the property 'DatasourceId'
        /// </summary>
        [Fact]
        public void DatasourceIdTest()
        {
            // TODO unit test for the property 'DatasourceId'
        }

        /// <summary>
        /// Test the property 'EMClient'
        /// </summary>
        [Fact]
        public void EMClientTest()
        {
            // TODO unit test for the property 'EMClient'
        }

        /// <summary>
        /// Test the property 'EMClientID'
        /// </summary>
        [Fact]
        public void EMClientIDTest()
        {
            // TODO unit test for the property 'EMClientID'
        }

        /// <summary>
        /// Test the property 'DatasourceName'
        /// </summary>
        [Fact]
        public void DatasourceNameTest()
        {
            // TODO unit test for the property 'DatasourceName'
        }

        /// <summary>
        /// Test the property 'OwnerID'
        /// </summary>
        [Fact]
        public void OwnerIDTest()
        {
            // TODO unit test for the property 'OwnerID'
        }

        /// <summary>
        /// Test the property 'CanEdit'
        /// </summary>
        [Fact]
        public void CanEditTest()
        {
            // TODO unit test for the property 'CanEdit'
        }

        /// <summary>
        /// Test the property 'IsEnabled'
        /// </summary>
        [Fact]
        public void IsEnabledTest()
        {
            // TODO unit test for the property 'IsEnabled'
        }

        /// <summary>
        /// Test the property 'EmPrimaryKeyName'
        /// </summary>
        [Fact]
        public void EmPrimaryKeyNameTest()
        {
            // TODO unit test for the property 'EmPrimaryKeyName'
        }

        /// <summary>
        /// Test the property 'GDCTable'
        /// </summary>
        [Fact]
        public void GDCTableTest()
        {
            // TODO unit test for the property 'GDCTable'
        }

        /// <summary>
        /// Test the property 'PreferencesTable'
        /// </summary>
        [Fact]
        public void PreferencesTableTest()
        {
            // TODO unit test for the property 'PreferencesTable'
        }
    }
}
