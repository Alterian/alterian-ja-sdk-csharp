/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JA.Model;
using Alterian.JA.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JA.Test.Model
{
    /// <summary>
    ///  Class for testing SaveDecodeListRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SaveDecodeListRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SaveDecodeListRequest
        //private SaveDecodeListRequest instance;

        public SaveDecodeListRequestTests()
        {
            // TODO uncomment below to create an instance of SaveDecodeListRequest
            //instance = new SaveDecodeListRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SaveDecodeListRequest
        /// </summary>
        [Fact]
        public void SaveDecodeListRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" SaveDecodeListRequest
            //Assert.IsType<SaveDecodeListRequest>(instance);
        }

        /// <summary>
        /// Test the property 'CopyVersion'
        /// </summary>
        [Fact]
        public void CopyVersionTest()
        {
            // TODO unit test for the property 'CopyVersion'
        }

        /// <summary>
        /// Test the property 'CreateCopy'
        /// </summary>
        [Fact]
        public void CreateCopyTest()
        {
            // TODO unit test for the property 'CreateCopy'
        }

        /// <summary>
        /// Test the property 'DefaultLabel'
        /// </summary>
        [Fact]
        public void DefaultLabelTest()
        {
            // TODO unit test for the property 'DefaultLabel'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'ReplaceExisting'
        /// </summary>
        [Fact]
        public void ReplaceExistingTest()
        {
            // TODO unit test for the property 'ReplaceExisting'
        }

        /// <summary>
        /// Test the property 'SourceLabels'
        /// </summary>
        [Fact]
        public void SourceLabelsTest()
        {
            // TODO unit test for the property 'SourceLabels'
        }

        /// <summary>
        /// Test the property 'TargetLabels'
        /// </summary>
        [Fact]
        public void TargetLabelsTest()
        {
            // TODO unit test for the property 'TargetLabels'
        }
    }
}
