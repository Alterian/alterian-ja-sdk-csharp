/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JA.Model;
using Alterian.JA.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JA.Test.Model
{
    /// <summary>
    ///  Class for testing EMUploadMapping
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EMUploadMappingTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EMUploadMapping
        //private EMUploadMapping instance;

        public EMUploadMappingTests()
        {
            // TODO uncomment below to create an instance of EMUploadMapping
            //instance = new EMUploadMapping();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EMUploadMapping
        /// </summary>
        [Fact]
        public void EMUploadMappingInstanceTest()
        {
            // TODO uncomment below to test "IsType" EMUploadMapping
            //Assert.IsType<EMUploadMapping>(instance);
        }

        /// <summary>
        /// Test the property 'ID'
        /// </summary>
        [Fact]
        public void IDTest()
        {
            // TODO unit test for the property 'ID'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'FolderID'
        /// </summary>
        [Fact]
        public void FolderIDTest()
        {
            // TODO unit test for the property 'FolderID'
        }

        /// <summary>
        /// Test the property 'EMUserID'
        /// </summary>
        [Fact]
        public void EMUserIDTest()
        {
            // TODO unit test for the property 'EMUserID'
        }

        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }

        /// <summary>
        /// Test the property 'Modified'
        /// </summary>
        [Fact]
        public void ModifiedTest()
        {
            // TODO unit test for the property 'Modified'
        }

        /// <summary>
        /// Test the property 'OwnerID'
        /// </summary>
        [Fact]
        public void OwnerIDTest()
        {
            // TODO unit test for the property 'OwnerID'
        }

        /// <summary>
        /// Test the property 'EMUserName'
        /// </summary>
        [Fact]
        public void EMUserNameTest()
        {
            // TODO unit test for the property 'EMUserName'
        }

        /// <summary>
        /// Test the property 'CanEdit'
        /// </summary>
        [Fact]
        public void CanEditTest()
        {
            // TODO unit test for the property 'CanEdit'
        }

        /// <summary>
        /// Test the property 'EMClient'
        /// </summary>
        [Fact]
        public void EMClientTest()
        {
            // TODO unit test for the property 'EMClient'
        }

        /// <summary>
        /// Test the property 'EMClientID'
        /// </summary>
        [Fact]
        public void EMClientIDTest()
        {
            // TODO unit test for the property 'EMClientID'
        }

        /// <summary>
        /// Test the property 'IsEnabled'
        /// </summary>
        [Fact]
        public void IsEnabledTest()
        {
            // TODO unit test for the property 'IsEnabled'
        }
    }
}
