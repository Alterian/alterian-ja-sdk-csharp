/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JA.Model;
using Alterian.JA.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JA.Test.Model
{
    /// <summary>
    ///  Class for testing EMVariable
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EMVariableTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EMVariable
        //private EMVariable instance;

        public EMVariableTests()
        {
            // TODO uncomment below to create an instance of EMVariable
            //instance = new EMVariable();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EMVariable
        /// </summary>
        [Fact]
        public void EMVariableInstanceTest()
        {
            // TODO uncomment below to test "IsType" EMVariable
            //Assert.IsType<EMVariable>(instance);
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'SampleValue'
        /// </summary>
        [Fact]
        public void SampleValueTest()
        {
            // TODO unit test for the property 'SampleValue'
        }

        /// <summary>
        /// Test the property 'UseDefaultForSample'
        /// </summary>
        [Fact]
        public void UseDefaultForSampleTest()
        {
            // TODO unit test for the property 'UseDefaultForSample'
        }

        /// <summary>
        /// Test the property 'UsedBy'
        /// </summary>
        [Fact]
        public void UsedByTest()
        {
            // TODO unit test for the property 'UsedBy'
        }

        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }

        /// <summary>
        /// Test the property 'DefaultField'
        /// </summary>
        [Fact]
        public void DefaultFieldTest()
        {
            // TODO unit test for the property 'DefaultField'
        }

        /// <summary>
        /// Test the property 'DefaultValue'
        /// </summary>
        [Fact]
        public void DefaultValueTest()
        {
            // TODO unit test for the property 'DefaultValue'
        }

        /// <summary>
        /// Test the property 'EditorType'
        /// </summary>
        [Fact]
        public void EditorTypeTest()
        {
            // TODO unit test for the property 'EditorType'
        }

        /// <summary>
        /// Test the property 'ForceMap'
        /// </summary>
        [Fact]
        public void ForceMapTest()
        {
            // TODO unit test for the property 'ForceMap'
        }

        /// <summary>
        /// Test the property 'Hidden'
        /// </summary>
        [Fact]
        public void HiddenTest()
        {
            // TODO unit test for the property 'Hidden'
        }

        /// <summary>
        /// Test the property 'ID'
        /// </summary>
        [Fact]
        public void IDTest()
        {
            // TODO unit test for the property 'ID'
        }

        /// <summary>
        /// Test the property 'LookupCombo'
        /// </summary>
        [Fact]
        public void LookupComboTest()
        {
            // TODO unit test for the property 'LookupCombo'
        }

        /// <summary>
        /// Test the property 'LookupID'
        /// </summary>
        [Fact]
        public void LookupIDTest()
        {
            // TODO unit test for the property 'LookupID'
        }

        /// <summary>
        /// Test the property 'LookupResult'
        /// </summary>
        [Fact]
        public void LookupResultTest()
        {
            // TODO unit test for the property 'LookupResult'
        }

        /// <summary>
        /// Test the property 'Modified'
        /// </summary>
        [Fact]
        public void ModifiedTest()
        {
            // TODO unit test for the property 'Modified'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'ParseName'
        /// </summary>
        [Fact]
        public void ParseNameTest()
        {
            // TODO unit test for the property 'ParseName'
        }

        /// <summary>
        /// Test the property 'VarReadonly'
        /// </summary>
        [Fact]
        public void VarReadonlyTest()
        {
            // TODO unit test for the property 'VarReadonly'
        }

        /// <summary>
        /// Test the property 'Required'
        /// </summary>
        [Fact]
        public void RequiredTest()
        {
            // TODO unit test for the property 'Required'
        }

        /// <summary>
        /// Test the property 'RowOrder'
        /// </summary>
        [Fact]
        public void RowOrderTest()
        {
            // TODO unit test for the property 'RowOrder'
        }

        /// <summary>
        /// Test the property 'Shared'
        /// </summary>
        [Fact]
        public void SharedTest()
        {
            // TODO unit test for the property 'Shared'
        }

        /// <summary>
        /// Test the property 'VarSystem'
        /// </summary>
        [Fact]
        public void VarSystemTest()
        {
            // TODO unit test for the property 'VarSystem'
        }

        /// <summary>
        /// Test the property 'VariableType'
        /// </summary>
        [Fact]
        public void VariableTypeTest()
        {
            // TODO unit test for the property 'VariableType'
        }
    }
}
