/*
 * Journey Analytics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JA.Model;
using Alterian.JA.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JA.Test.Model
{
    /// <summary>
    ///  Class for testing GetFieldTransformationMappingsRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetFieldTransformationMappingsRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetFieldTransformationMappingsRequest
        //private GetFieldTransformationMappingsRequest instance;

        public GetFieldTransformationMappingsRequestTests()
        {
            // TODO uncomment below to create an instance of GetFieldTransformationMappingsRequest
            //instance = new GetFieldTransformationMappingsRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetFieldTransformationMappingsRequest
        /// </summary>
        [Fact]
        public void GetFieldTransformationMappingsRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetFieldTransformationMappingsRequest
            //Assert.IsType<GetFieldTransformationMappingsRequest>(instance);
        }

        /// <summary>
        /// Test the property 'ColumnNameEx'
        /// </summary>
        [Fact]
        public void ColumnNameExTest()
        {
            // TODO unit test for the property 'ColumnNameEx'
        }

        /// <summary>
        /// Test the property 'Cursor'
        /// </summary>
        [Fact]
        public void CursorTest()
        {
            // TODO unit test for the property 'Cursor'
        }

        /// <summary>
        /// Test the property 'DataSourceId'
        /// </summary>
        [Fact]
        public void DataSourceIdTest()
        {
            // TODO unit test for the property 'DataSourceId'
        }

        /// <summary>
        /// Test the property 'IsDataRefreshRequired'
        /// </summary>
        [Fact]
        public void IsDataRefreshRequiredTest()
        {
            // TODO unit test for the property 'IsDataRefreshRequired'
        }

        /// <summary>
        /// Test the property 'JSONCompareTransforms'
        /// </summary>
        [Fact]
        public void JSONCompareTransformsTest()
        {
            // TODO unit test for the property 'JSONCompareTransforms'
        }

        /// <summary>
        /// Test the property 'JSONTransforms'
        /// </summary>
        [Fact]
        public void JSONTransformsTest()
        {
            // TODO unit test for the property 'JSONTransforms'
        }

        /// <summary>
        /// Test the property 'PostFilter'
        /// </summary>
        [Fact]
        public void PostFilterTest()
        {
            // TODO unit test for the property 'PostFilter'
        }

        /// <summary>
        /// Test the property 'SampleSettings'
        /// </summary>
        [Fact]
        public void SampleSettingsTest()
        {
            // TODO unit test for the property 'SampleSettings'
        }

        /// <summary>
        /// Test the property 'SourceFilter'
        /// </summary>
        [Fact]
        public void SourceFilterTest()
        {
            // TODO unit test for the property 'SourceFilter'
        }

        /// <summary>
        /// Test the property 'SourcePostMatch'
        /// </summary>
        [Fact]
        public void SourcePostMatchTest()
        {
            // TODO unit test for the property 'SourcePostMatch'
        }
    }
}
